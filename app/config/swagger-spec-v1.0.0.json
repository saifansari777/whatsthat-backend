{
    "openapi": "3.0.0",
    "info": {
      "version": "1.0.0",
      "title": "WhatsThat?",
      "description": "The WhatsThat? server API for use in the 22/23 Mobile Applications Development assignment.",
      "contact": {
        "name": "Ashley Williams",
        "email": "ashley.williams@mmu.ac.uk"
      }
    },
    "servers": [
      {
        "url": "http://localhost:3333/api/1.0.0"
      }
    ],
    "paths": {
      "/user": {
        "post": {
          "tags": [
            "User Management"
          ],
          "summary": "Add a new user",
          "operationId": "addUser",
          "description": "Will create a new user in the system.\n\nEmail must be valid and password must be greater than 8 characters (including: one uppercase, one number and one special)\n",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddUser"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SignUpResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/user/{user_id}": {
        "get": {
          "tags": [
            "User Management"
          ],
          "summary": "Get user information",
          "operationId": "getUser",
          "description": "Retrieve all of the information about a user.\n",
          "security": [
            {
              "User": []
            }
          ],
          "parameters": [
            {
              "$ref": "#/components/parameters/user_id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "patch": {
          "tags": [
            "User Management"
          ],
          "summary": "Update user information",
          "operationId": "updateUser",
          "description": "Update a users profile/password\n",
          "security": [
            {
              "User": []
            }
          ],
          "parameters": [
            {
              "$ref": "#/components/parameters/user_id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUser"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad request"
            },
            "401": {
              "description": "Unauthorised"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/login": {
        "post": {
          "tags": [
            "User Management"
          ],
          "summary": "Log into an account",
          "operationId": "loginUser",
          "description": "Will log a user into their account\n",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginUser"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid email/password supplied"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/logout": {
        "post": {
          "tags": [
            "User Management"
          ],
          "summary": "Log out of an account",
          "operationId": "logoutUser",
          "description": "Will log a user out of their account\n",
          "security": [
            {
              "User": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorised"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/user/{user_id}/photo": {
        "get": {
          "tags": [
            "User Management"
          ],
          "summary": "Get a users profile photo",
          "operationId": "getProfilePhoto",
          "description": "Retrieve a profil photo for a user\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/user_id"
            }
          ],
          "security": [
            {
              "User": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "image/png": {
                  "schema": {
                    "$ref": "#/components/schemas/BinaryImageFile"
                  }
                },
                "image/jpeg": {
                  "schema": {
                    "$ref": "#/components/schemas/BinaryImageFile"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorised"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "post": {
          "tags": [
            "User Management"
          ],
          "summary": "Upload a profile photo",
          "operationId": "addProfilePhoto",
          "description": "Upload a profile photo\n",
          "security": [
            {
              "User": []
            }
          ],
          "parameters": [
            {
              "$ref": "#/components/parameters/user_id"
            }
          ],
          "requestBody": {
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryImageFile"
                }
              },
              "image/jpeg": {
                "schema": {
                  "$ref": "#/components/schemas/BinaryImageFile"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad request"
            },
            "401": {
              "description": "Unauthorised"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/search": {
        "get": {
          "tags": [
            "User Management"
          ],
          "summary": "Search for users",
          "operationId": "searchUsers",
          "description": "Search the list of users. \n\nQuery parameters can be used to filter the search:\n  q: a string to serach for in the users first name, last name or email\n  search_in: allows you to search through all users, or just existing contacts\n  limit: limit the number of results retrieved (for pagination/default is 20)\n  offset: offset the results returned (for pagination)\n",
          "security": [
            {
              "User": []
            }
          ],
          "parameters": [
            {
              "$ref": "#/components/parameters/q"
            },
            {
              "$ref": "#/components/parameters/search_in"
            },
            {
              "$ref": "#/components/parameters/limit"
            },
            {
              "$ref": "#/components/parameters/offset"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorised"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/contacts": {
        "get": {
          "tags": [
            "Contacts Management"
          ],
          "summary": "View your contacts",
          "operationId": "getContacts",
          "description": "Get the list of contacts for the logged in user.\n",
          "security": [
            {
              "User": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorised"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/user/{user_id}/contact": {
        "post": {
          "tags": [
            "Contacts Management"
          ],
          "summary": "Add a contact",
          "operationId": "addContact",
          "description": "Will add a user to the logged in users list of contacts\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/user_id"
            }
          ],
          "security": [
            {
              "User": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "You can't add yourself as a contact"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "delete": {
          "tags": [
            "Contacts Management"
          ],
          "summary": "Remove a contact",
          "operationId": "removeContact",
          "description": "Will remove a user from the logged in users list of contacts\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/user_id"
            }
          ],
          "security": [
            {
              "User": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "You can't remove yourself as a contact"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/blocked": {
        "get": {
          "tags": [
            "Contacts Management"
          ],
          "summary": "View all blocked users",
          "operationId": "getBlocked",
          "description": "Will return a list of users who have been blocked.\n",
          "security": [
            {
              "User": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorised"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/user/{user_id}/block": {
        "post": {
          "tags": [
            "Contacts Management"
          ],
          "summary": "Block a user",
          "operationId": "blockUser",
          "description": "Will block a user from being able to message and find the logged in user.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/user_id"
            }
          ],
          "security": [
            {
              "User": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "You can't block yourself"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "delete": {
          "tags": [
            "Contacts Management"
          ],
          "summary": "Unblock a user",
          "operationId": "unblockUser",
          "description": "Will unblock a user who has been previously blocked by the logged in user.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/user_id"
            }
          ],
          "security": [
            {
              "User": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "You can't block yourself"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/chat": {
        "get": {
          "tags": [
            "Chat Management"
          ],
          "summary": "View your list of chats",
          "operationId": "getChats",
          "description": "Get the list of chats for the logged in user.\n",
          "security": [
            {
              "User": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ChatSummaries"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorised"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "post": {
          "tags": [
            "Chat Management"
          ],
          "summary": "Start a new conversation",
          "operationId": "createChat",
          "description": "Create a new conversation. \n\nBy default, only the logged in user will be added to the conversation initially. More users can be added after the chat is created.\n",
          "security": [
            {
              "User": []
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateChat"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CreateChatResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request"
            },
            "401": {
              "description": "Unauthorised"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/chat/{chat_id}": {
        "get": {
          "tags": [
            "Chat Management"
          ],
          "summary": "View the details of a single chat",
          "operationId": "viewChat",
          "description": "Get the details of a single chat, given its ID.\n",
          "security": [
            {
              "User": []
            }
          ],
          "parameters": [
            {
              "$ref": "#/components/parameters/chat_id"
            },
            {
              "$ref": "#/components/parameters/limit"
            },
            {
              "$ref": "#/components/parameters/offset"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Chat"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorised"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "patch": {
          "tags": [
            "Chat Management"
          ],
          "summary": "Update chat information",
          "operationId": "updateChat",
          "description": "Update a chat\n",
          "security": [
            {
              "User": []
            }
          ],
          "parameters": [
            {
              "$ref": "#/components/parameters/chat_id"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateChat"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad request"
            },
            "401": {
              "description": "Unauthorised"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/chat/{chat_id}/user/{user_id}": {
        "post": {
          "tags": [
            "Chat Management"
          ],
          "summary": "Add a user to the chat",
          "operationId": "addUserToChat",
          "description": "Will add a user to an existing chat.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/chat_id"
            },
            {
              "$ref": "#/components/parameters/user_id"
            }
          ],
          "security": [
            {
              "User": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "delete": {
          "tags": [
            "Chat Management"
          ],
          "summary": "Remove a user from the chat",
          "operationId": "removeUserFromChat",
          "description": "Will remove a user from an existing chat.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/chat_id"
            },
            {
              "$ref": "#/components/parameters/user_id"
            }
          ],
          "security": [
            {
              "User": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/chat/{chat_id}/message": {
        "post": {
          "tags": [
            "Chat Management"
          ],
          "summary": "Send a message in the chat",
          "operationId": "sendMessage",
          "description": "Will add a message to an existing chat.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/chat_id"
            }
          ],
          "security": [
            {
              "User": []
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessage"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/chat/{chat_id}/message/{message_id}": {
        "patch": {
          "tags": [
            "Chat Management"
          ],
          "summary": "Update a message in the chat",
          "operationId": "updateMessage",
          "description": "Will update an existing message.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/chat_id"
            },
            {
              "$ref": "#/components/parameters/message_id"
            }
          ],
          "security": [
            {
              "User": []
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateMessage"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "delete": {
          "tags": [
            "Chat Management"
          ],
          "summary": "Delete a message in the chat",
          "operationId": "deleteMessage",
          "description": "Will delete an existing message.\n",
          "parameters": [
            {
              "$ref": "#/components/parameters/chat_id"
            },
            {
              "$ref": "#/components/parameters/message_id"
            }
          ],
          "security": [
            {
              "User": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Unauthorized"
            },
            "403": {
              "description": "Forbidden"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      }
    },
    "components": {
      "parameters": {
        "user_id": {
          "name": "user_id",
          "in": "path",
          "description": "A unique integer ID for identifying a User",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/user_id"
          }
        },
        "chat_id": {
          "name": "chat_id",
          "in": "path",
          "description": "A unique integer ID for identifying a Chat",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/chat_id"
          }
        },
        "message_id": {
          "name": "message_id",
          "in": "path",
          "description": "A unique integer ID for identifying a Message",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/message_id"
          }
        },
        "q": {
          "name": "q",
          "in": "query",
          "description": "The query string to search for",
          "required": false,
          "schema": {
            "type": "string",
            "example": "Ash"
          }
        },
        "search_in": {
          "name": "search_in",
          "in": "query",
          "description": "Only include users in your one of your lists",
          "required": false,
          "schema": {
            "type": "string",
            "default": "all",
            "enum": [
              "contacts",
              "all"
            ]
          }
        },
        "limit": {
          "name": "limit",
          "in": "query",
          "description": "The number of items to return",
          "required": false,
          "schema": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 20
          }
        },
        "offset": {
          "name": "offset",
          "in": "query",
          "description": "The number of items to skip before starting to collect the result set (e.g. for pagination)",
          "required": false,
          "schema": {
            "type": "integer",
            "minimum": 0,
            "default": 0
          }
        }
      },
      "schemas": {
        "user_id": {
          "type": "integer",
          "example": 14
        },
        "chat_id": {
          "type": "integer",
          "example": 14
        },
        "message_id": {
          "type": "integer",
          "example": 14
        },
        "AddUser": {
          "type": "object",
          "required": [
            "first_name",
            "last_name",
            "email",
            "password"
          ],
          "properties": {
            "first_name": {
              "type": "string",
              "example": "Ashley"
            },
            "last_name": {
              "type": "string",
              "example": "Williams"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "ashley.williams@mmu.ac.uk"
            },
            "password": {
              "type": "string",
              "example": "Wr3xh4m!"
            }
          },
          "additionalProperties": false
        },
        "SignUpResponse": {
          "type": "object",
          "properties": {
            "user_id": {
              "type": "integer",
              "example": 14
            }
          },
          "additionalProperties": false
        },
        "User": {
          "type": "object",
          "properties": {
            "user_id": {
              "type": "integer",
              "example": 14
            },
            "first_name": {
              "type": "string",
              "example": "Ashley"
            },
            "last_name": {
              "type": "string",
              "example": "Williams"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "ashley.williams@mmu.ac.uk"
            }
          },
          "additionalProperties": false
        },
        "UpdateUser": {
          "type": "object",
          "properties": {
            "first_name": {
              "type": "string",
              "example": "Ashley"
            },
            "last_name": {
              "type": "string",
              "example": "Williams"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "ashley.williams@mmu.ac.uk"
            },
            "password": {
              "type": "string",
              "example": "Wr3xh4m!"
            }
          },
          "additionalProperties": false
        },
        "LoginUser": {
          "type": "object",
          "required": [
            "email",
            "password"
          ],
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "example": "ashley.williams@mmu.ac.uk"
            },
            "password": {
              "type": "string",
              "example": "Wr3xh4m!"
            }
          },
          "additionalProperties": false
        },
        "LoginResponse": {
          "type": "object",
          "properties": {
            "user_id": {
              "type": "integer",
              "example": 14
            },
            "session_token": {
              "type": "string",
              "example": "b5d9e7be6c97aa855f721b6e742120f2"
            }
          },
          "additionalProperties": false
        },
        "BinaryImageFile": {
          "type": "string",
          "format": "binary",
          "description": "The raw content of the JPEG or PNG image file.",
          "example": "Raw content of JPEG or PNG image file."
        },
        "Users": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/User"
          }
        },
        "ChatSummaries": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/ChatSummary"
          }
        },
        "ChatSummary": {
          "type": "object",
          "properties": {
            "chat_id": {
              "type": "integer",
              "example": 14
            },
            "name": {
              "type": "string",
              "example": "The Rod Stewart Appreciation Society"
            },
            "creator": {
              "$ref": "#/components/schemas/User"
            },
            "last_message": {
              "$ref": "#/components/schemas/SingleMessage"
            }
          },
          "additionalProperties": false
        },
        "CreateChat": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "example": "The Rod Stewart Appreciation Society"
            }
          },
          "additionalProperties": false
        },
        "CreateChatResponse": {
          "type": "object",
          "properties": {
            "chat_id": {
              "type": "integer",
              "example": 14
            }
          },
          "additionalProperties": false
        },
        "Chat": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "The Rod Stewart Appreciation Society"
            },
            "creator": {
              "$ref": "#/components/schemas/User"
            },
            "members": {
              "$ref": "#/components/schemas/Users"
            },
            "messages": {
              "$ref": "#/components/schemas/Messages"
            }
          },
          "additionalProperties": false
        },
        "UpdateChat": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "The Rod Stewart Appreciation Society"
            }
          },
          "additionalProperties": false
        },
        "Messages": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/SingleMessage"
          }
        },
        "SingleMessage": {
          "type": "object",
          "properties": {
            "message_id": {
              "type": "integer",
              "example": 14
            },
            "timestamp": {
              "type": "integer",
              "example": 1640013942
            },
            "message": {
              "type": "string",
              "example": "Welcome to all our new members"
            },
            "author": {
              "$ref": "#/components/schemas/User"
            }
          },
          "additionalProperties": false
        },
        "SendMessage": {
          "type": "object",
          "required": [
            "message"
          ],
          "properties": {
            "message": {
              "type": "string",
              "example": "Welcome to all our new members"
            }
          },
          "additionalProperties": false
        },
        "UpdateMessage": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "example": "Welcome to all our new members"
            }
          },
          "additionalProperties": false
        }
      },
      "securitySchemes": {
        "User": {
          "type": "apiKey",
          "name": "X-Authorization",
          "in": "header"
        }
      }
    },
    "security": [
      {}
    ]
  }